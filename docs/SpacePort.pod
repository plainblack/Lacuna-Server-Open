=head1 Space Port Methods

Space Port is accessible via the URL C</spaceport>.

The Space Port is where all the ships you build will be docked once they have been built from the L<Shipyard>. You can dock twice as many ships as the level of the Space Port.

The list of methods below represents changes and additions to the methods that all L<Buildings> share.

=head2 view ( session_id, building_id )

This method is extended to include a list of docked ships.

 {
    "building" : { ... },
    "status" : { ... },
    "max_ships" : 8,
    "docks_available" : 4,
    "docked_ships" : {
        "probe" : 3,
        "cargo_ship" : 0,
        "spy_pod" : 1,
        "colony_ship" : 0,
        "terraforming_platform_ship": 0,
        "gas_giant_settlement_platform_ship" : 0,
        "mining_platform_ship" : 0,
        "smuggler_ship" : 1,
        "space_station" : 0,
    }
 }
 

=head2 view_all_ships ( session_id, building_id, [ paging, filter, sort ] )

Shows you all your ships whatever they are doing.

 {
    "ships" : [
        {
            "id" : "id-goes-here",
            "name" : "CS3",
            "type_human" : "Cargo Ship",
            "type" : "cargo_ship",
            "task" : "Travelling",
            "speed" : "400",
            "fleet_speed" : "0",
            "stealth" : "0",
            "hold_size" : "1200",
            "berth_level" : "1",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "can_recall" : "0",
            "can_scuttle" : "1",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "to" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Mars"
            }
        },
        {
            "id" : "id-goes-here",
            "name" : "F13",
            "type_human" : "Fighter",
            "type" : "fighter",
            "task" : "Defend",
            "speed" : "2000",
            "fleet_speed" : "0",
            "stealth" : "0",
            "hold_size" : "0",
            "berth_level" : "1",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "can_recall" : "0",
            "can_scuttle" : "1",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "orbiting" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Mars",
               "x" : 4,
               "y" : -3
            }

        },
        ...
    ],
    "number_of_ships" : 13,
    "status" : { ... }
 }

Travelling ships will have a from and to block. Defending fighters will have a from and orbiting block.

=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 paging

Optional. A hash reference that contains the paging criteria. Valid paging option keys include page_number, items_per page and no_paging.

=head4 page_number

Optional. An integer representing the page of ships to return. Defaults to 1.

=head4 items_per_page

Optional. An integer representing the number of items per page to return. Defaults to 25.

=head4 no_paging

Optional. If set to 1, all other paging options are ignored and all results will be retured.

  { "no_paging" : 1 }

  { "page_number" : 2, "items_per_page" : 30 }

=head3 filter

Optional. A hash reference that contains the filter criteria. Valid filter option keys include task, type and tag.

=head4 task

Optional. An array reference or string with the task(s) to filter on. Valid tasks include Building, Defend, Docked, Mining, Orbiting, Supply Chain, Travelling, Waiting on Trade, and Waste Chain

=head4 type

Optional. An array reference or string with the type(s) to filter on. Valid types are the existing ship types.

=head4 tag

Optional. An array reference or string with the tag(s) to filter on. Valid tags include Trade, Colonization, Intelligence, Exploration, War, and Mining.

Note: Tags will be converted to types prior to filtering and any types that were passed will be replaced.

  { "task" : "Defend" }

  { "tag" : "Mining" }

  { "task" : "Docked", "type" : "freighter" }

  { "tag" : [ "Colonization", "Exploration" ], "task" : "Travelling" }

=head3 sort

Optional. A string with the column to sort on. Defaults to 'type'. (A second sort column, 'name', is added to your chosen sort column.) Valid columns to sort on include: combat, name, speed, stealth, task, and type.


=head2 view_foreign_ships ( session_id, building_id, page_number )

Shows you all the foreign ships that are incoming. However, the list is filtered by the stealth of the ship vs the level of the SpacePort. The formula is:

 350 * SpacePort Level >= Ship Stealth

If your SpacePort exceeds the Ship's Stealth, then you'll see it incoming. Otherwise you won't.

 {
    "ships" : [
        {
            "id" : "id-goes-here",
            "name" : "CS3",
            "type_human" : "Cargo Ship",
            "type" : "cargo_ship",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "can_recall" : "0",
            "can_scuttle" : "0",
            "from" : {
                "id" : "id-goes-here",
                "name" : "Earth",
                "empire" : {
                    "id" : "id-goes-here",
                    "name" : "Earthlings"
                }
            }
        },
        ...
    ],
    "number_of_ships" : 13,
    "status" : { ... }
 }

The C<from> block is only included if

 450 * SpacePort Level >= Ship Stealth

=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to page 1. Shows 25 at a time.

=head2 get_fleet_for ( session_id, from_body_id, target )

Provides a summary of ships that can be included in a fleet action

  {
    "ships" : [
      {
        "type" : "sweeper",
        "type_human" : "Sweeper",
        "speed" : 10166,
        "stealth" : 10948,
        "combat" : 33372,
        "name"   : "Sweepit",
        "hold_size" : 0,
        "quantity" : 103,
        "estimated_travel_time" : "3654",
      },
      {
        "type" : "sweeper",
        "type_human" : "Sweeper",
        "speed" : 10166,
        "stealth" : 10948,
        "combat" : 25000,
        "name"   : "Swifer",
        "hold_size" : 0,
        "quantity" : 26,
        "estimated_travel_time" : "3745",
      },
      {
        "type" : "surveyor",
        "type_human" : "Surveyor",
        "speed" : 9030,
        "stealth" : 9030,
        "combat" : 3220,
        "name"   : "Electric Eye",
        "hold_size" : 0,
        "quantity" : 24,
        "estimated_travel_time" : "4123",
      }
      ...
    ],
    "status" : { ... }
  }

Ships are grouped according to type,speed,stealth and combat, the number of ships in each group is given.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ships.

=head3 target

A hash reference that can contain one of five items to identify a star or body.

 { "body_name" : "Earth" }

 { "body_id" : "id-goes-here" }

 { "star_name" : "Sol" }

 { "star_id" : "id-goes-here" }

 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star or body.


=head2 get_ships_for ( session_id, from_body_id, target )

Provides a list of incoming ships and ships that are available to send to a specific target. Use with C<send_ship>.

 {
    "incoming" : [
        {
            "id" : "id-goes-here",
            "name" : "P13",
            "type_human" : "Probe",
            "type" : "probe",
            "task" : "Travelling",
            "speed" : "1200",
            "fleet_speed" : "0",
            "stealth" : "0",
            "hold_size" : "0",
            "berth_level" : "1",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol"
            }
        },
        ...
    ],
    "available" : [
        {
            "id" : "id-goes-here",
            "name" : "D13",
            "type_human" : "Detonator",
            "type" : "detonator",
            "task" : "Docked",
            "speed" : "700",
            "fleet_speed" : "0",
            "stealth" : "0",
            "hold_size" : "0",
            "berth_level" : "1",
            "estimated_travel_time" : 3600, # in seconds
            ...
        },
        ...
    ],
    "unavailable" : [
        {
           "reason" : [1009, "You can't send a detonator to a star."],
            "ship" : {
                "id" : "id-goes-here",
                "name" : "D13",
                "type_human" : "Detonator",
                "type" : "detonator",
                "task" : "Docked",
                "speed" : "700",
                "fleet_speed" : "0",
                "stealth" : "0",
                "hold_size" : "0",
                "berth_level" : "1",
                "date_started" : "01 31 2010 13:09:05 +0600",
                "date_available" : "01 31 2010 13:09:05 +0600"
            }
        },
        ...
    ],
    "orbiting" : [
        {
            "id" : "id-goes-here",
            "name" : "F13",
            "type_human" : "Fighter",
            "type" : "fighter",
            "task" : "Defend",
            "speed" : "2000",
            "fleet_speed" : "0",
            "stealth" : "0",
            "hold_size" : "0",
            "berth_level" : "1",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "orbiting" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Mars",
               "x" : 4,
               "y" : -3,
            }

        },
        ...
    ],
    "mining_platforms" : [
        {
            empire_id   =>  "id-goes-here",
            empire_name => "The Peeps From Across The Street"
        },
        ...
    ],
    "fleet_send_limit" : 20,
    "status" : { ... }
 }

The C<unavailable> block tells you about ships that are docked, but are for some reason not available to be used. The C<orbiting> block will be returned only if the target is body and tells you about fighters that are defending and can be recalled. The C<mining_platforms> block will be returned only if the target is an asteroid that has platforms on it. The value of C<fleet_send_limit> tells you how many ships can be included in a fleet.

=head3 session_id

A session id.

=head3 from_body_id

The unique id of the planet that should send the ship.

=head3 target

A hash reference that can contain one of five items to identify a star or body.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "star_name" : "Sol" }
 
 { "star_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star or body.


=head2 send_ship ( session_id, ship_id, target )

Sends a ship to a specified body or star. Use with C<get_ships_for>.

 {
    "status" : { ... },
    "ship" : {
        "id" : "id-goes-here",
        "name" : "P13",
        "type_human" : "Probe",
        "type" : "probe",
        "task" : "Travelling",
        "speed" : "1200",
        "fleet_speed" : "0",
        "stealth" : "0",
        "hold_size" : "0",
        "berth_level" : "1",
        "date_started" : "01 31 2010 13:09:05 +0600",
        "date_available" : "02 01 2010 10:08:33 +0600",
        "date_arrives" : "02 01 2010 10:08:33 +0600",
        "can_recall" : "0",
        "can_scuttle" : "0",
        "from" : {
           "id" : "id-goes-here",
           "type" : "body",
           "name" : "Earth"
        },
        "to" : {
           "id" : "id-goes-here",
           "type" : "star",
           "name" : "Sol"
        }
    }  
 }

=head3 session_id

A session id.

=head3 ship_id

The unique id of a ship to send.

=head3 target

A hash reference that can contain one of five items to identify a star or body.

 { "body_name" : "Earth" }
 
 { "body_id" : "id-goes-here" }
 
 { "star_name" : "Sol" }
 
 { "star_id" : "id-goes-here" }
 
 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star or body.


=head2 send_ship_types ( session_id, from_body_id, target, types, arrival )

Sends a quantity of ships, of a specific type (type, speed, combat, stealth) to a target.

Look at B<get_fleet_for> for a summary of what ships can be sent.

Returns the same as B<get_fleet_for> showing how many ships are remaining to be sent.

Throws 1002,1009,1010,1019

=head4 session_id

A session ID.

=head4 from_body_id

The Unique ID of the body that should send the ships

=head4 target

A hash reference that can contain one of five items to identify a star or body.

 { "body_name" : "Earth" }

 { "body_id" : "id-goes-here" }

 { "star_name" : "Sol" }

 { "star_id" : "id-goes-here" }

 { "x" : 4, "y" : -3 }

=head4 body_name

A string with the body's name. Case insensitive, but will throw an exception for misspelling.

=head4 body_id

The unique id of the body.

=head4 star_name

A string with the star's name. Case insensitive, but will throw an exception for misspelling.

=head4 star_id

The unique id of the star.

=head4 x | y

A set of x,y coordinates to locate the star or body.

=head4 types

An array reference that contains the specification of the ships to send and the quantity.

  [
    {
      "type" : "sweeper",
      "speed" : 10166,
      "stealth" : 10948,
      "combat" : 33372,
      "quantity" : 100
    },
    {
      "type" : "surveyor",
      "speed" : 9030,
      "stealth" : 9030,
      "combat" : 3220,
      "quantity" : 10
    }
  ]

=head4 arrival

A hash reference of the required arrival time.

  {
    "day" : "23",
    "hour" : "12",
    "minute" : "01",
    "second" : "30"
  }
or
  {
    "earliest" : 1,
  }

So long as the sending body has that quantity of ships with those specifications, then the
ships will be sent.

Ships will be set to arrive at the B<arrival> time and date, which can be up to 60 days in
the future. B<day> is the day of the month, either the remainder of the current month, or
the start of next month. e.g. if the current date is 23rd of January, then a B<day> of 23
will refer to today whereas 3 would refer to 3rd of February.

If an arrival time is set which is prior to the earliest arrival time of the slowest ship,
then an exception is raised.

If earliest is set, all other values are ignored and ships are sent at fastest speed possible.
They may still be grouped together by the server into an attack group.

=head2 send_fleet ( session_id, ship_ids, target, [ set_speed ] )

Sends a fleet of ships to a specified body or star. Use with C<get_ships_for>.

  {
    "status" : { ... },
      "fleet" : [
        "ship" : {
          "id" : "id-goes-here",
          "name" : "P13",
          "type_human" : "Probe",
          "type" : "probe",
          "task" : "Travelling",
          "speed" : "1200",
          "fleet_speed" : "250",
          "stealth" : "0",
          "hold_size" : "0",
          "berth_level" : "1",
          "date_started" : "01 31 2010 13:09:05 +0600",
          "date_available" : "02 01 2010 10:08:33 +0600",
          "date_arrives" : "02 01 2010 10:08:33 +0600",
          "can_recall" : "0",
          "can_scuttle" : "0",
          "from" : {
            "id" : "id-goes-here",
            "type" : "body",
            "name" : "Earth"
          },
          "to" : {
            "id" : "id-goes-here",
            "type" : "star",
            "name" : "Sol"
          }
        },
        ...
      ]
}

Throws 1002, 1009, 1010, 1016.

=head3 session_id

A session id.

=head3 ship_ids

An array reference of ship ids to send.

=head3 target

A hash reference that can contain one of five items to identify a star or body. Same as C<send_ship>.

=head3 set_speed

Optional. An integer specifying the speed at which all ships in the fleet should travel. When set to 0, the speed of the slowest ship will be used.

An exception will be thrown if this is less than zero or exceeds the speed of the slowest ship in the fleet.




=head2 recall_ship ( session_id, building_id, ship_id )

Recalls an orbiting ship (task of 'Defend' or 'Orbiting') to the body of origin.

Throws 1002, 1010.

 {
    "status" : { ... },
    "ship" : {
        "id" : "id-goes-here",
        "name" : "F13",
        "type_human" : "Fighter",
        "type" : "fighter",
        "task" : "Travelling",
        "speed" : "2000",
        "stealth" : "0",
        "hold_size" : "0",
        "berth_level" : "1",
        "date_started" : "01 31 2010 13:09:05 +0600",
        "date_available" : "02 01 2010 10:08:33 +0600",
        "date_arrives" : "02 01 2010 10:08:33 +0600",
        "can_recall" : "0",
        "can_scuttle" : "0",
        "from" : {
           "id" : "id-goes-here",
           "type" : "body",
           "name" : "Earth"
        },
        "to" : {
           "id" : "id-goes-here",
           "type" : "star",
           "name" : "Sol"
        }
    }
 }

Recalling an orbiting Spy Shuttle also fetches as many idle spies as will fit from the planet it was orbiting.

Throws 1002, 1010, 1013.

 {
     "ship" : {
        "id" : "id-goes-here",
        "name" : "SS4",
        "hold_size" : 0,
        "berth_level" : "1",
        "speed" : 3400,
        "type" : "spy_shuttle",
        "date_arrives" : "01 31 2010 13:09:05 +0600",
        ...
     },
     "status" : { ... }
 }

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of a ship to recall.



=head2 recall_all ( session_id, building_id )

Recalls all of this planet's ships that are orbiting (task of 'Defend' or 'Orbiting') to their spaceport of origin. This behaves like C<recall_ship> in all other aspects.

Throws 1002, 1010.

 {
    "status" : { ... },
    "ships" : [
        {
            "id" : "id-goes-here",
            "name" : "F13",
            "type_human" : "Fighter",
            "type" : "fighter",
            "task" : "Travelling",
            "speed" : "2000",
            "stealth" : "0",
            "hold_size" : "0",
            "berth_level" : "1",
            "date_started" : "01 31 2010 13:09:05 +0600",
            "date_available" : "02 01 2010 10:08:33 +0600",
            "date_arrives" : "02 01 2010 10:08:33 +0600",
            "can_recall" : "0",
            "can_scuttle" : "0",
            "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth"
            },
            "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol"
            }
        },
        ...
    ],
 }


=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.





=head2 name_ship ( session_id, building_id, ship_id, name )

Set the name of a ship.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of the ship you want to name.

=head3 name

The name you want to give the ship. 1 to 30 characters. No profanity. No funky characters.



=head2 scuttle_ship ( session_id, building_id, ship_id )

Destroy a ship that you no longer need. It must be docked to scuttle it.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_id

The unique id of the ship you want to destroy.



=head2 mass_scuttle_ship ( session_id, building_id, ship_ids )

Destroy a ship that you no longer need. It must be docked to scuttle it.

=head3 session_id

A session id.

=head3 building_id

The unique id for the space port.

=head3 ship_ids

Reference to an array of ship ids


 
=head2 view_ships_travelling ( session_id, building_id, [ page_number ])

Returns a list of the ships that are travelling to or from this planet.

B<NOTE:> All inbound/outbound ships are shown regardless of which space port they will eventually land at.

 {
    "status" : { ... },
    "number_of_ships_travelling" : 30,
    "ships_travelling" : [
       {
           "id" : "id-goes-here",
           "type" : "probe",
            "type_human" : "Probe",
           "date_arrives" : "01 31 2010 13:09:05 +0600",
           "from" : {
               "id" : "id-goes-here",
               "type" : "body",
               "name" : "Earth",
           },
           "to" : {
               "id" : "id-goes-here",
               "type" : "star",
               "name" : "Sol",
           }
       },
       ...
    ]
 }


=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to 1. An integer representing which page of ships travelling to view. Each page shows 25 ships.



=head2 view_ships_orbiting ( session_id, building_id, [ page_number ])

Shows you all the foreign ships that are orbiting this planet. However, the list is filtered by the stealth of the ship vs the level of the SpacePort. The formula is:

 350 * SpacePort Level >= Ship Stealth

If your SpacePort exceeds the Ship's Stealth, then you'll see it orbiting. Otherwise you won't.

 {
    "ships" : [
       {
           "id" : "id-goes-here",
           "name" : "SS3",
           "type" : "spy_shuttle",
           "type_human" : "Spy Shuttle",
           "date_arrived" : "02 01 2010 10:08:33 +0600",
           "from" : {
               "id" : "id-goes-here",
               "name" : "Mars",
               "empire" : {
                   "id" : "id-goes-here",
                   "name" : "Martians"
               }
           }
       },
       {
           "id" : "id-goes-here",
           "name" : "F3",
           "type" : "fighter",
           "type_human" : "Fighter",
           "from" : {
               "id" : "id-goes-here",
               "name" : "Earth",
               "empire" : {
                   "id" : "id-goes-here",
                   "name" : "Earthlings"
               }
           }
       },
        ...
    ],
    "number_of_ships" : 13,
    "status" : { ... }
 }

The C<from> block is only included if

 450 * SpacePort Level >= Ship Stealth

=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to page 1. Shows 25 at a time.



=head2 prepare_send_spies ( session_id, on_body_id, to_body_id )

Gathers the information needed to call the C<send_spies> method.

 {
    "status" : { ... },
    "ships" : [
        {
            "id" : "id-goes-here",
            "name" : "CS4",
            "hold_size" : 1100,
            "berth_level" : 1,
            "speed" : 400,
            "type" : "cargo_ship",
            "estimated_travel_time" : 3600, # in seconds
            ...
        },
        ...
    ],
    "spies" : [
        {
            "id" : "id-goes-here",
            "level" : 12,
            "name" : "Jack Bauer",
            "assigned_to" : {
               "body_id" : "id-goes-here",
               "name" : "Earth"
            },
            ...
        },
        ...
    ]
 }
 
B<NOTE:> Only a certain number of spies can fit in each type of ship. Spy Pods can hold 1. Spy Shuttles can hold 4. And ships with a cargo hold can hold 1 for every 350 units of hold size.

=head3 session_id

A session id.

=head3 on_body_id

The unique id of the planet that the spies are on and ship will be dispatched from.

=head3 to_body_id

The unique id of the planet that the spies should be sent to.




=head2 send_spies ( session_id, on_body_id, to_body_id, ship_id, spy_ids )

Sends one or more of spies to a planet using a selected ship. See also C<prepare_send_spies>.

 {
     "ship" : {
        "id" : "id-goes-here",
        "name" : "CS4",
        "hold_size" : 1100,
        "berth_level" : 1,
        "speed" : 400,
        "type" : "cargo_ship",
        "date_arrives" : "01 31 2010 13:09:05 +0600",
        ...
     },
    "spies_sent" : ["id-goes-here","id-goes-here","id-goes-here"],     # should be identical to "spy_ids"
    "spies_not_sent" : ["id-goes-here","id-goes-here","id-goes-here"],  # should only contain something if you're cheating, or a spy dies/turns between RPC calls
    "status" : { ... }
 }

=head3 session_id

A session id.

=head3 on_body_id

The unique id of the planet that should send the ship and that has the spies.

=head3 to_body_id

The unique id of the planet that the spies should be sent to.

=head3 ship_id

The unique id of the ship to send.

=head3 spy_ids

An array reference of spy ids to send. 




=head2 prepare_fetch_spies ( session_id, on_body_id, to_body_id )

Gathers the information needed to call the C<fetch_spies> method.

 {
    "status" : { ... },
    "ships" : [
        {
            "id" : "id-goes-here",
            "name" : "CS4",
            "hold_size" : 1100,
            "berth_level" : 1,
            "speed" : 400,
            "type" : "cargo_ship",
            "estimated_travel_time" : 3600, # in seconds
            ...
        },
        ...
    ],
    "spies" : [
        {
            "id" : "id-goes-here",
            "level" : 12,
            "name" : "Jack Bauer",
            "assigned_to" : {
               "body_id" : "id-goes-here",
               "name" : "Earth"
            },
            ...
        },
        ...
    ]
 }

=head3 session_id

A session id.

=head3 on_body_id

The unique id of the planet that the spies are on.

=head3 to_body_id

The unique id of the planet that the spies should be sent to, and the ship will be dispatched from.





=head2 fetch_spies ( session_id, on_body_id, to_body_id, ship_id, spy_ids )

Sends a specified ship to fetch specified spies from C<on_body_id>, and bring them back to C<to_body_id>. See also C<prepare_fetch_spies>.

B<NOTE:> If the spies are not Idle when the ship arrives, they will not be picked up.

 {
     "ship" : {
        "id" : "id-goes-here",
        "name" : "CS4",
        "hold_size" : 1100,
        "berth_level" : 1,
        "speed" : 400,
        "type" : "cargo_ship",
        "date_arrives" : "01 31 2010 13:09:05 +0600",
        ...
     },
     "status" : { ... }
 }

=head3 session_id

A session id.

=head3 on_body_id

The unique id of the planet that the spies are on.

=head3 to_body_id

The unique id of the planet that the spies should be sent to, and the ship will be dispatched from.

=head3 ship_id

The unique id of the ship to use to fetch the spies.

=head3 spy_ids

An array reference of spy ids to send. 



=head2 view_battle_logs ( session_id, building_id, [ page_number ] )

Shows you the battle logs for your empire with the most recent action listed first. This data will be cleaned out every seven days.

 {
   "battle_log" : [
     {
       "date" : "06 21 2011 22:54:37 +0600",
       "attacking_body" : "Romulus",
       "attacking_empire" : "Romulans",
       "attacking_unit" : "Sweeper 21",
       "defending_body" : "Kronos",
       "defending_empire" : "Klingons",
       "defending_unit" : "Shield Against Weapons",
       "victory_to" : "defender"
     },
     ...
   ],
   "number_of_logs" : 57,
   "status" : { ... }
 }

=head3 session_id

A session id.

=head3 building_id

The unique id of the space port.

=head3 page_number

Defaults to 1. An integer representing which page of battle logs to view. Each page shows 25 entries.


=cut
